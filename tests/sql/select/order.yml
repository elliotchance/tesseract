data:
  table1:
  - {"foo": 40}
  - {"foo": 100}
  - {"foo": 50}
  - {"foo": 20}
  - {"foo": 70}

  table2:
  - {"foo": "zzz"}
  - {"foo": "abc"}
  - {"foo": "def"}

tests:
  order_by_integer:
    data: table1
    sql: SELECT * FROM table1 ORDER BY foo
    result:
    - {"foo": 20}
    - {"foo": 40}
    - {"foo": 50}
    - {"foo": 70}
    - {"foo": 100}

  order_with_where:
    data: table1
    sql: SELECT * FROM table1 WHERE foo > 50 ORDER BY foo
    result:
    - {"foo": 70}
    - {"foo": 100}

  order_by_field_that_doesnt_exist:
    data: table1
    sql: SELECT * FROM table1 ORDER BY bar
    result:
    - {"foo": 40}
    - {"foo": 100}
    - {"foo": 50}
    - {"foo": 20}
    - {"foo": 70}

  order_by_string:
    data: table2
    sql: SELECT * FROM table2 ORDER BY foo
    result:
    - {"foo": "abc"}
    - {"foo": "def"}
    - {"foo": "zzz"}

  order_by_integer_ascending:
    description: |
      This does the same thing as `order_by_integer` but adds the explicit
      `ASC`.
    data: table1
    sql: SELECT * FROM table1 ORDER BY foo ASC
    result:
    - {"foo": 20}
    - {"foo": 40}
    - {"foo": 50}
    - {"foo": 70}
    - {"foo": 100}
